<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[About System]]></title>
  <link href="http://io.kiyor.us/atom.xml" rel="self"/>
  <link href="http://io.kiyor.us/"/>
  <updated>2014-03-07T16:54:29-08:00</updated>
  <id>http://io.kiyor.us/</id>
  <author>
    <name><![CDATA[kiyor]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[init blog]]></title>
    <link href="http://io.kiyor.us/blog/2014/03/05/init-blog/"/>
    <updated>2014-03-05T12:38:53-08:00</updated>
    <id>http://io.kiyor.us/blog/2014/03/05/init-blog</id>
    <content type="html"><![CDATA[<ul id="markdown-toc">
  <li><a href="#this-is-testing">This is testing</a></li>
</ul>

<h1 id="this-is-testing">This is testing</h1>

<div class="bogus-wrapper"><notextile><figure class="code"> <div class="CodeRay">
  <div class="code"><pre>
#!/bin/sh
if [[ $EUID -eq 0 ]];then
        echo 'you are root'
fi
</pre></div>
</div>
 </figure></notextile></div>

<pre lang="bash"><code>	#!/bin/sh
	if [[ $EUID -eq 0 ]];then
		echo 'you are root'
	fi
</code></pre>

<p><code lang="ruby">def hello</code></p>

<div><table class="CodeRay"><tr>
  <td class="line-numbers"><pre><a href="#n1" name="n1">1</a>
<a href="#n2" name="n2">2</a>
<a href="#n3" name="n3">3</a>
<a href="#n4" name="n4">4</a>
</pre></td>
  <td class="code"><pre>#!/bin/sh
if [[ $EUID -eq 0 ]];then
    echo 'you are root'
fi
</pre></td>
</tr></table>
</div>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c">#!/bin/sh</span>
</span><span class="line"><span class="k">if</span> <span class="o">[[</span> <span class="nv">$EUID</span> -eq 0 <span class="o">]]</span>;<span class="k">then</span>
</span><span class="line"><span class="k">	</span><span class="nb">echo</span> <span class="s1">&#39;you are root&#39;</span>
</span><span class="line"><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>nothing over here</li>
</ul>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">non codeing
</span></code></pre></td></tr></table></div></figure></notextile></div>

<ul>
  <li>table testing</li>
</ul>

<table>
  <thead>
    <tr>
      <th>title1</th>
      <th>title2</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>value1</td>
      <td>value2</td>
    </tr>
    <tr>
      <td>value3</td>
      <td>value4</td>
    </tr>
  </tbody>
</table>

<ul>
  <li>table testing2</li>
</ul>

<table>
  <thead>
    <tr>
      <th>Default aligned</th>
      <th style="text-align: left">Left aligned</th>
      <th style="text-align: center">Center aligned</th>
      <th style="text-align: right">Right aligned</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>First body part</td>
      <td style="text-align: left">Second cell</td>
      <td style="text-align: center">Third cell</td>
      <td style="text-align: right">fourth cell</td>
    </tr>
    <tr>
      <td>Second line</td>
      <td style="text-align: left">foo</td>
      <td style="text-align: center"><strong>strong</strong></td>
      <td style="text-align: right">baz</td>
    </tr>
    <tr>
      <td>Third line</td>
      <td style="text-align: left">quux</td>
      <td style="text-align: center">baz</td>
      <td style="text-align: right">bar</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>Second body</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
    </tr>
    <tr>
      <td>2 line</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
    </tr>
  </tbody>
  <tfoot>
    <tr>
      <td>Footer row</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
    </tr>
  </tfoot>
</table>

<ul>
  <li>table testing3</li>
</ul>

<table>
  <thead>
    <tr>
      <th>Default aligned</th>
      <th style="text-align: left">Left aligned</th>
      <th style="text-align: center">Center aligned</th>
      <th style="text-align: right">Right aligned</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>First body part</td>
      <td style="text-align: left">Second cell</td>
      <td style="text-align: center">Third cell</td>
      <td style="text-align: right">fourth cell</td>
    </tr>
    <tr>
      <td>Second line</td>
      <td style="text-align: left">foo</td>
      <td style="text-align: center"><strong>strong</strong></td>
      <td style="text-align: right">baz</td>
    </tr>
    <tr>
      <td>Third line</td>
      <td style="text-align: left">quux</td>
      <td style="text-align: center">baz</td>
      <td style="text-align: right">bar</td>
    </tr>
  </tbody>
  <tbody>
    <tr>
      <td>Second body</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
    </tr>
    <tr>
      <td>2 line</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
    </tr>
  </tbody>
  <tfoot>
    <tr>
      <td>Footer row</td>
      <td style="text-align: left"> </td>
      <td style="text-align: center"> </td>
      <td style="text-align: right"> </td>
    </tr>
  </tfoot>
</table>

<ul>
  <li>math testing</li>
</ul>

<script type="math/tex; mode=display">% &lt;![CDATA[

\begin{align*}
  & \phi(x,y) = \phi \left(\sum_{i=1}^n x_ie_i, \sum_{j=1}^n y_je_j \right)
  = \sum_{i=1}^n \sum_{j=1}^n x_i y_j \phi(e_i, e_j) = \\
  & (x_1, \ldots, x_n) \left( \begin{array}{ccc}
      \phi(e_1, e_1) & \cdots & \phi(e_1, e_n) \\
      \vdots & \ddots & \vdots \\
      \phi(e_n, e_1) & \cdots & \phi(e_n, e_n)
    \end{array} \right)
  \left( \begin{array}{c}
      y_1 \\
      \vdots \\
      y_n
    \end{array} \right)
\end{align*}
 %]]&gt;</script>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
<span class="line-number">21</span>
<span class="line-number">22</span>
<span class="line-number">23</span>
<span class="line-number">24</span>
<span class="line-number">25</span>
<span class="line-number">26</span>
<span class="line-number">27</span>
<span class="line-number">28</span>
<span class="line-number">29</span>
<span class="line-number">30</span>
<span class="line-number">31</span>
<span class="line-number">32</span>
<span class="line-number">33</span>
<span class="line-number">34</span>
<span class="line-number">35</span>
<span class="line-number">36</span>
<span class="line-number">37</span>
<span class="line-number">38</span>
<span class="line-number">39</span>
<span class="line-number">40</span>
<span class="line-number">41</span>
<span class="line-number">42</span>
<span class="line-number">43</span>
<span class="line-number">44</span>
<span class="line-number">45</span>
<span class="line-number">46</span>
<span class="line-number">47</span>
<span class="line-number">48</span>
<span class="line-number">49</span>
<span class="line-number">50</span>
<span class="line-number">51</span>
<span class="line-number">52</span>
<span class="line-number">53</span>
<span class="line-number">54</span>
<span class="line-number">55</span>
<span class="line-number">56</span>
<span class="line-number">57</span>
<span class="line-number">58</span>
<span class="line-number">59</span>
<span class="line-number">60</span>
<span class="line-number">61</span>
<span class="line-number">62</span>
<span class="line-number">63</span>
<span class="line-number">64</span>
<span class="line-number">65</span>
<span class="line-number">66</span>
<span class="line-number">67</span>
<span class="line-number">68</span>
<span class="line-number">69</span>
<span class="line-number">70</span>
<span class="line-number">71</span>
<span class="line-number">72</span>
<span class="line-number">73</span>
<span class="line-number">74</span>
<span class="line-number">75</span>
<span class="line-number">76</span>
<span class="line-number">77</span>
<span class="line-number">78</span>
<span class="line-number">79</span>
<span class="line-number">80</span>
<span class="line-number">81</span>
<span class="line-number">82</span>
<span class="line-number">83</span>
<span class="line-number">84</span>
<span class="line-number">85</span>
<span class="line-number">86</span>
<span class="line-number">87</span>
<span class="line-number">88</span>
<span class="line-number">89</span>
<span class="line-number">90</span>
<span class="line-number">91</span>
<span class="line-number">92</span>
<span class="line-number">93</span>
<span class="line-number">94</span>
<span class="line-number">95</span>
<span class="line-number">96</span>
<span class="line-number">97</span>
<span class="line-number">98</span>
<span class="line-number">99</span>
<span class="line-number">100</span>
<span class="line-number">101</span>
<span class="line-number">102</span>
<span class="line-number">103</span>
<span class="line-number">104</span>
<span class="line-number">105</span>
<span class="line-number">106</span>
<span class="line-number">107</span>
<span class="line-number">108</span>
</pre></td><td class="code"><pre><code class="go"><span class="line"><span class="cm">/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.</span>
</span><span class="line">
</span><span class="line"><span class="cm">* File Name : main.go</span>
</span><span class="line">
</span><span class="line"><span class="cm">* Purpose :</span>
</span><span class="line">
</span><span class="line"><span class="cm">* Creation Date : 02-26-2014</span>
</span><span class="line">
</span><span class="line"><span class="cm">* Last Modified : Wed 26 Feb 2014 01:30:21 AM UTC</span>
</span><span class="line">
</span><span class="line"><span class="cm">* Created By : Kiyor</span>
</span><span class="line">
</span><span class="line"><span class="cm">_._._._._._._._._._._._._._._._._._._._._.*/</span>
</span><span class="line">
</span><span class="line"><span class="kn">package</span> <span class="nx">main</span>
</span><span class="line">
</span><span class="line"><span class="kn">import</span> <span class="p">(</span>
</span><span class="line">	<span class="s">&quot;fmt&quot;</span>
</span><span class="line">	<span class="s">&quot;math/rand&quot;</span>
</span><span class="line">	<span class="s">&quot;runtime&quot;</span>
</span><span class="line">	<span class="s">&quot;sync&quot;</span>
</span><span class="line">	<span class="s">&quot;time&quot;</span>
</span><span class="line"><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="kd">type</span> <span class="nx">client</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class="line">	<span class="nx">conn</span> <span class="kd">interface</span><span class="p">{}</span>
</span><span class="line">	<span class="nx">loc</span>  <span class="o">*</span><span class="kt">bool</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kd">func</span> <span class="p">(</span><span class="nx">c</span> <span class="o">*</span><span class="nx">client</span><span class="p">)</span> <span class="nx">lock</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">	<span class="o">*</span><span class="nx">c</span><span class="p">.</span><span class="nx">loc</span> <span class="p">=</span> <span class="kc">true</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kd">func</span> <span class="p">(</span><span class="nx">c</span> <span class="o">*</span><span class="nx">client</span><span class="p">)</span> <span class="nx">unlock</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">	<span class="o">*</span><span class="nx">c</span><span class="p">.</span><span class="nx">loc</span> <span class="p">=</span> <span class="kc">false</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kd">type</span> <span class="nx">worker</span> <span class="kd">struct</span> <span class="p">{</span>
</span><span class="line">	<span class="nx">sync</span><span class="p">.</span><span class="nx">WaitGroup</span>
</span><span class="line">	<span class="nx">counter</span> <span class="o">*</span><span class="kt">int</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kd">func</span> <span class="p">(</span><span class="nx">w</span> <span class="o">*</span><span class="nx">worker</span><span class="p">)</span> <span class="nx">add</span><span class="p">(</span><span class="nx">n</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">	<span class="nx">w</span><span class="p">.</span><span class="nx">Add</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span>
</span><span class="line">	<span class="o">*</span><span class="nx">w</span><span class="p">.</span><span class="nx">counter</span> <span class="o">+=</span> <span class="nx">n</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kd">func</span> <span class="p">(</span><span class="nx">w</span> <span class="o">*</span><span class="nx">worker</span><span class="p">)</span> <span class="nx">done</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">	<span class="o">*</span><span class="nx">w</span><span class="p">.</span><span class="nx">counter</span><span class="o">--</span>
</span><span class="line">	<span class="nx">w</span><span class="p">.</span><span class="nx">Done</span><span class="p">()</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kd">func</span> <span class="nx">initClient</span><span class="p">()</span> <span class="nx">client</span> <span class="p">{</span>
</span><span class="line">	<span class="kd">var</span> <span class="nx">conn</span> <span class="kd">interface</span><span class="p">{}</span>
</span><span class="line">	<span class="k">return</span> <span class="nx">client</span><span class="p">{</span><span class="nx">conn</span><span class="p">,</span> <span class="nb">new</span><span class="p">(</span><span class="kt">bool</span><span class="p">)}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kd">func</span> <span class="p">(</span><span class="nx">c</span> <span class="o">*</span><span class="nx">client</span><span class="p">)</span> <span class="nx">doSomething</span><span class="p">(</span><span class="nx">id</span><span class="p">,</span> <span class="nx">index</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">w</span> <span class="nx">worker</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">	<span class="nx">r</span> <span class="o">:=</span> <span class="nx">random</span><span class="p">(</span><span class="mi">5</span><span class="p">)</span>
</span><span class="line">	<span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">random</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class="line">		<span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">1</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span><span class="p">)</span>
</span><span class="line">	<span class="p">}</span>
</span><span class="line">	<span class="nx">fmt</span><span class="p">.</span><span class="nx">Printf</span><span class="p">(</span><span class="s">&quot;I&#39;m doing process[%d] in client[%d] and finish it using %d seconds, running %d\n&quot;</span><span class="p">,</span> <span class="nx">index</span><span class="p">,</span> <span class="nx">id</span><span class="p">,</span> <span class="nx">r</span><span class="p">,</span> <span class="o">*</span><span class="nx">w</span><span class="p">.</span><span class="nx">counter</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line">	<span class="nx">c</span><span class="p">.</span><span class="nx">unlock</span><span class="p">()</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kd">func</span> <span class="nx">random</span><span class="p">(</span><span class="nx">rg</span> <span class="kt">int</span><span class="p">)</span> <span class="kt">int</span> <span class="p">{</span>
</span><span class="line">	<span class="k">return</span> <span class="nx">rand</span><span class="p">.</span><span class="nx">Intn</span><span class="p">(</span><span class="nx">rg</span><span class="p">)</span> <span class="o">+</span> <span class="mi">1</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kd">func</span> <span class="nx">getClient</span><span class="p">(</span><span class="nx">clients</span> <span class="p">[]</span><span class="nx">client</span><span class="p">)</span> <span class="kt">int</span> <span class="p">{</span>
</span><span class="line">	<span class="k">for</span> <span class="p">{</span>
</span><span class="line">		<span class="k">for</span> <span class="nx">k</span><span class="p">,</span> <span class="nx">c</span> <span class="o">:=</span> <span class="k">range</span> <span class="nx">clients</span> <span class="p">{</span>
</span><span class="line">			<span class="k">if</span> <span class="p">!</span><span class="o">*</span><span class="nx">c</span><span class="p">.</span><span class="nx">loc</span> <span class="p">{</span>
</span><span class="line">				<span class="nx">c</span><span class="p">.</span><span class="nx">lock</span><span class="p">()</span>
</span><span class="line">				<span class="k">return</span> <span class="nx">k</span>
</span><span class="line">			<span class="p">}</span>
</span><span class="line">		<span class="p">}</span>
</span><span class="line">		<span class="nx">time</span><span class="p">.</span><span class="nx">Sleep</span><span class="p">(</span><span class="mi">1</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Millisecond</span><span class="p">)</span>
</span><span class="line">	<span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kd">var</span> <span class="p">(</span>
</span><span class="line">	<span class="nx">clients</span> <span class="p">[]</span><span class="nx">client</span>
</span><span class="line">	<span class="nx">size</span>    <span class="p">=</span> <span class="mi">10</span>
</span><span class="line">	<span class="nx">process</span> <span class="p">=</span> <span class="mi">100</span>
</span><span class="line"><span class="p">)</span>
</span><span class="line">
</span><span class="line"><span class="kd">func</span> <span class="nx">init</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">	<span class="nx">runtime</span><span class="p">.</span><span class="nx">GOMAXPROCS</span><span class="p">(</span><span class="nx">runtime</span><span class="p">.</span><span class="nx">NumCPU</span><span class="p">())</span>
</span><span class="line">	<span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">size</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class="line">		<span class="nx">clients</span> <span class="p">=</span> <span class="nb">append</span><span class="p">(</span><span class="nx">clients</span><span class="p">,</span> <span class="nx">initClient</span><span class="p">())</span>
</span><span class="line">	<span class="p">}</span>
</span><span class="line"><span class="p">}</span>
</span><span class="line">
</span><span class="line"><span class="kd">func</span> <span class="nx">main</span><span class="p">()</span> <span class="p">{</span>
</span><span class="line">	<span class="kd">var</span> <span class="nx">w</span> <span class="nx">worker</span>
</span><span class="line">	<span class="nx">w</span><span class="p">.</span><span class="nx">counter</span> <span class="p">=</span> <span class="nb">new</span><span class="p">(</span><span class="kt">int</span><span class="p">)</span>
</span><span class="line">	<span class="k">for</span> <span class="nx">i</span> <span class="o">:=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="p">&lt;</span> <span class="nx">process</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span> <span class="p">{</span>
</span><span class="line">		<span class="nx">w</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="mi">1</span><span class="p">)</span>
</span><span class="line">		<span class="nx">id</span> <span class="o">:=</span> <span class="nx">getClient</span><span class="p">(</span><span class="nx">clients</span><span class="p">)</span>
</span><span class="line">		<span class="k">go</span> <span class="kd">func</span><span class="p">(</span><span class="nx">id</span><span class="p">,</span> <span class="nx">i</span> <span class="kt">int</span><span class="p">,</span> <span class="nx">w</span> <span class="o">*</span><span class="nx">worker</span><span class="p">)</span> <span class="p">{</span>
</span><span class="line">			<span class="nx">clients</span><span class="p">[</span><span class="nx">id</span><span class="p">].</span><span class="nx">doSomething</span><span class="p">(</span><span class="nx">id</span><span class="p">,</span> <span class="nx">i</span><span class="p">,</span> <span class="o">*</span><span class="nx">w</span><span class="p">)</span>
</span><span class="line">			<span class="nx">w</span><span class="p">.</span><span class="nx">done</span><span class="p">()</span>
</span><span class="line">		<span class="p">}(</span><span class="nx">id</span><span class="p">,</span> <span class="nx">i</span><span class="p">,</span> <span class="o">&amp;</span><span class="nx">w</span><span class="p">)</span>
</span><span class="line">	<span class="p">}</span>
</span><span class="line">	<span class="nx">w</span><span class="p">.</span><span class="nx">Wait</span><span class="p">()</span>
</span><span class="line"><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p><code>/play nyan</code>
/play nyan</p>

<script type="math/tex; mode=display">a^2 + b^2 = c^2</script>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to Use Ramdisk in Your Mac]]></title>
    <link href="http://io.kiyor.us/blog/2012/08/07/how-to-use-ramdisk-in-your-mac/"/>
    <updated>2012-08-07T17:01:15-07:00</updated>
    <id>http://io.kiyor.us/blog/2012/08/07/how-to-use-ramdisk-in-your-mac</id>
    <content type="html"><![CDATA[<p>You can simply use command to create a ramdisk.</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">diskutil erasevolume HFS+ <span class="s2">&quot;ramdisk&quot;</span> <span class="sb">`</span>hdiutil attach -nomount ram://512000<span class="sb">`</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>This is 250 MB ramdisk, you can change 512000 to change the volume of the ramdisk.
If you want to use ramdisk for your safari cache
You can close the safari and run these</p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line">rm -rf ~/Library/Caches/com.apple.Safari
</span><span class="line">mkdir /Volumes/ramdisk/com.apple.Safari
</span><span class="line">ln -s /Volumes/ramdisk/com.apple.Safari/ ~/Library/Caches/com.apple.Safari
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>Another app’s caches you can just modify path form the code above.</p>

<p>If you need it runs automatically when you reboot.
Create a script like ramedisk.sh and <code>chmod u+x ramdisk.sh</code></p>

<div class="bogus-wrapper"><notextile><figure class="code"><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
<span class="line-number">9</span>
<span class="line-number">10</span>
<span class="line-number">11</span>
<span class="line-number">12</span>
<span class="line-number">13</span>
<span class="line-number">14</span>
<span class="line-number">15</span>
<span class="line-number">16</span>
<span class="line-number">17</span>
<span class="line-number">18</span>
<span class="line-number">19</span>
<span class="line-number">20</span>
</pre></td><td class="code"><pre><code class="bash"><span class="line"><span class="c">#!/bin/sh</span>
</span><span class="line"><span class="k">if</span> <span class="o">[</span> ! -d <span class="s2">&quot;/Volumes/ramdisk&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class="line"><span class="k">	</span>diskutil erasevolume HFS+ <span class="s2">&quot;ramdisk&quot;</span> <span class="sb">`</span>hdiutil attach -nomount ram://512000<span class="sb">`</span>
</span><span class="line"><span class="k">fi</span>
</span><span class="line"><span class="k">if</span> <span class="o">[</span> ! -d <span class="s2">&quot;/Volumes/ramdisk/com.apple.Safari&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class="line"><span class="k">	</span>rm -rf ~/Library/Caches/com.apple.Safari
</span><span class="line">	mkdir /Volumes/ramdisk/com.apple.Safari
</span><span class="line">	ln -s /Volumes/ramdisk/com.apple.Safari/ ~/Library/Caches/com.apple.Safari
</span><span class="line"><span class="k">fi</span>
</span><span class="line"><span class="k">if</span> <span class="o">[</span> ! -d <span class="s2">&quot;/Volumes/ramdisk/Google&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class="line"><span class="k">	</span>rm -rf ~/Library/Caches/Google
</span><span class="line">	mkdir /Volumes/ramdisk/Google
</span><span class="line">	ln -s /Volumes/ramdisk/Google/ ~/Library/Caches/Google
</span><span class="line"><span class="k">fi</span>
</span><span class="line"><span class="k"> </span>
</span><span class="line"><span class="k">if</span> <span class="o">[</span> -d <span class="s2">&quot;/Volumes/ramdisk/com.apple.Safari&quot;</span> <span class="o">]</span> <span class="o">&amp;&amp;</span> <span class="o">[</span> -d <span class="s2">&quot;/Volumes/ramdisk/Google&quot;</span> <span class="o">]</span>; <span class="k">then</span>
</span><span class="line"><span class="k">	</span><span class="nb">echo</span> <span class="s2">&quot;Ramdisk is enabled!&quot;</span>
</span><span class="line"><span class="k">else</span>
</span><span class="line"><span class="k">	</span><span class="nb">echo</span> <span class="s2">&quot;Error&quot;</span>
</span><span class="line"><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure></notextile></div>

<p>rc.local file might not work, Mac looks not load rc.local, what I do is append these to terminal login sheel and run terminal when Mac start. You need add a check like <code>if [[ $(tty) = /dev/ttys001 ]]; then ~/ramdisk.sh; fi;</code></p>

<p>You can also modify this if you need.
More information
Testing software: Blackmagic Disk Speed Test</p>

<table>
  <thead>
    <tr>
      <th>10 Bit YUV 4:2:2 PAL</th>
      <th>Default SSD</th>
      <th>Default Ramdisk</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Disk Write Speed MB/s</td>
      <td>180</td>
      <td>800</td>
    </tr>
    <tr>
      <td>Disk Read Speed MB/s</td>
      <td>210</td>
      <td>800</td>
    </tr>
  </tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Share my Mac’s Apps List]]></title>
    <link href="http://io.kiyor.us/blog/2012/08/07/share-my-macs-apps-list/"/>
    <updated>2012-08-07T16:54:11-07:00</updated>
    <id>http://io.kiyor.us/blog/2012/08/07/share-my-macs-apps-list</id>
    <content type="html"><![CDATA[<p>Last year I bought 2011 Mac Air for learning Objective-C. Now I’m using OSX for my main environment.
Most of the people who never use OSX thought “Mac is over prices, only the hardware is good and not support a lot of apps”.
But most of Mac users love Mac is because the OS.
So apps I use to make me think Mac is awesome.</p>

<h3 id="st-xcode">1st: Xcode</h3>
<p>Without Xcode, your Mac is not completed. Not because you need programing something, just because you really need command line tools from Xcode. Regular command line is not enough to access some awesome command. After you install the Xcode and download the command line tools, your Mac is ready to go.</p>

<h3 id="nd-terminal">2nd: Terminal</h3>
<p>This topic will be very huge. Terminal could be use everywhere. The most important things on Terminal is because they can easily edit root file without any problem. Also you can ssh via terminal. Windows use putty, that’s not good. Terminal have great GUI, not only help you do your works but also make the works look amazing.</p>

<h3 id="rd-macports">3rd: MacPorts</h3>
<p>If you are familiar with Linux, you must know rpm and apt-get. port is similar like these, but port let you download the source and compile by yourself. The package might be install slowly and cpu will almost 100%. Whatever you could use a lot of Linux 3rd party package in your Mac like nmap, watch and so on.</p>

<h3 id="th-textmate">4th: TextMate</h3>
<p>TextMate is an awesome text editor in Mac. It could use a lot of plugin and even compile your code without other apps. What I have problem is I cannot change default table size as space, and also sometimes auto tab will annoying you.</p>

<h3 id="th-macvim">5th: MacVim</h3>
<p>Powerful, not not for newbie developer. I use MacVim for view the php or custom stuff. You could do whatever in Vim, same as MacVim. If you are developer, you should know how to use keyboard control the cursor at least.</p>

<h3 id="th-bbedit">6th: BBedit</h3>
<p>Good text editor for project diff and support real-time word suggestion. I purchase this app only for these two reason. OK, one more reason: it is available in App Store.</p>

<h3 id="th-coda--coda-2">7th: Coda / Coda 2</h3>
<p>If you are a web developer, You must have this app. This is the best php writer.</p>

<h3 id="th-sequel-pro">8th: Sequel Pro</h3>
<p>FREE MySql app. The GUI is sample, easy for use. If you should manage mysql database data, you must have it.</p>

<h3 id="th-navicat">9th: Navicat</h3>
<p>This app have a lot of version. You can try Navicat Premium first, and then try Navicat Premium Essentials. This app is best for SQL data structural; not very good for data editing.</p>

<h3 id="cyberduck">10: CyberDuck</h3>
<p>FREE / PAY ftp / sftp kind of app. This app is enough if you just use ftp for some time.</p>

<h3 id="transmit">11: Transmit</h3>
<p>Best ftp / sftp kind of app. The only thing is it could not zip the file by GUI. The GUI of the app is amazing.</p>

<h3 id="evernote">12: Evernote</h3>
<p>Good app for note, sync with all your device. Only poor is it is not stable when you offline.</p>

<h3 id="dropbox">13: Dropbox</h3>
<p>I don’t wanna say anything, if you don’t have account just click me.</p>

<h3 id="vmware">14: VMware</h3>
<p>If you will use Linux or Windows for some reason, you must have this one. It cost money but more like a product.</p>

<h3 id="virtualbox">15: VirtualBox</h3>
<p>FREE but not very good for GUI access. I think VirtualBox is best for virtual a server. You can modify more complex than VMware.</p>

<h3 id="github">16: GitHub</h3>
<p>If you have source code in your Mac, please use it to control it. It reduce your madness.</p>
]]></content>
  </entry>
  
</feed>
